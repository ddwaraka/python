# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class LocationResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        LocationResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'city': 'CityInformation',
            'airports': 'list[AirportInformation]'
        }

        self.attribute_map = {
            'city': 'city',
            'airports': 'airports'
        }

        self._city = None
        self._airports = None

    @property
    def city(self):
        """
        Gets the city of this LocationResponse.
        Information for any IATA city code which corresponds to the provided code

        :return: The city of this LocationResponse.
        :rtype: CityInformation
        """
        return self._city

    @city.setter
    def city(self, city):
        """
        Sets the city of this LocationResponse.
        Information for any IATA city code which corresponds to the provided code

        :param city: The city of this LocationResponse.
        :type: CityInformation
        """
        self._city = city

    @property
    def airports(self):
        """
        Gets the airports of this LocationResponse.
        Information for any IATA airport located in the provided IATA city code or which corresponds to the provided code

        :return: The airports of this LocationResponse.
        :rtype: list[AirportInformation]
        """
        return self._airports

    @airports.setter
    def airports(self, airports):
        """
        Sets the airports of this LocationResponse.
        Information for any IATA airport located in the provided IATA city code or which corresponds to the provided code

        :param airports: The airports of this LocationResponse.
        :type: list[AirportInformation]
        """
        self._airports = airports

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

