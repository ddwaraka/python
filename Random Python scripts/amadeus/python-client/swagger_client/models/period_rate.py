# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class PeriodRate(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        PeriodRate - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'start_date': 'date',
            'end_date': 'date',
            'currency': 'str',
            'amount': 'str'
        }

        self.attribute_map = {
            'start_date': 'start_date',
            'end_date': 'end_date',
            'currency': 'currency',
            'amount': 'amount'
        }

        self._start_date = None
        self._end_date = None
        self._currency = None
        self._amount = None

    @property
    def start_date(self):
        """
        Gets the start_date of this PeriodRate.
        The start date of this rate, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :return: The start_date of this PeriodRate.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """
        Sets the start_date of this PeriodRate.
        The start date of this rate, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :param start_date: The start_date of this PeriodRate.
        :type: date
        """
        self._start_date = start_date

    @property
    def end_date(self):
        """
        Gets the end_date of this PeriodRate.
        The date on which this rate ends, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :return: The end_date of this PeriodRate.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """
        Sets the end_date of this PeriodRate.
        The date on which this rate ends, in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :param end_date: The end_date of this PeriodRate.
        :type: date
        """
        self._end_date = end_date

    @property
    def currency(self):
        """
        Gets the currency of this PeriodRate.
        <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> currency code of this rate.

        :return: The currency of this PeriodRate.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """
        Sets the currency of this PeriodRate.
        <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217</a> currency code of this rate.

        :param currency: The currency of this PeriodRate.
        :type: str
        """
        self._currency = currency

    @property
    def amount(self):
        """
        Gets the amount of this PeriodRate.
        Total amount in the given currency per day of this rate, formatted appropriately. For example&colon; 194.99.

        :return: The amount of this PeriodRate.
        :rtype: str
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """
        Sets the amount of this PeriodRate.
        Total amount in the given currency per day of this rate, formatted appropriately. For example&colon; 194.99.

        :param amount: The amount of this PeriodRate.
        :type: str
        """
        self._amount = amount

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

