# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class TravelRecordHeader(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        TravelRecordHeader - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'creation_office_id': 'str',
            'owner_office_id': 'str'
        }

        self.attribute_map = {
            'creation_office_id': 'creation_office_id',
            'owner_office_id': 'owner_office_id'
        }

        self._creation_office_id = None
        self._owner_office_id = None

    @property
    def creation_office_id(self):
        """
        Gets the creation_office_id of this TravelRecordHeader.
        9 character Amadeus office identifier of the travel agency that created this travel record. An office ID may be considered as equivalent to a <a href=\"https://en.wikipedia.org/wiki/Pseudo_city_code\">PCC</a> in other reservation systems.

        :return: The creation_office_id of this TravelRecordHeader.
        :rtype: str
        """
        return self._creation_office_id

    @creation_office_id.setter
    def creation_office_id(self, creation_office_id):
        """
        Sets the creation_office_id of this TravelRecordHeader.
        9 character Amadeus office identifier of the travel agency that created this travel record. An office ID may be considered as equivalent to a <a href=\"https://en.wikipedia.org/wiki/Pseudo_city_code\">PCC</a> in other reservation systems.

        :param creation_office_id: The creation_office_id of this TravelRecordHeader.
        :type: str
        """
        self._creation_office_id = creation_office_id

    @property
    def owner_office_id(self):
        """
        Gets the owner_office_id of this TravelRecordHeader.
        9 character Amadeus office identifier of the travel agency that owns and manages this travel record.

        :return: The owner_office_id of this TravelRecordHeader.
        :rtype: str
        """
        return self._owner_office_id

    @owner_office_id.setter
    def owner_office_id(self, owner_office_id):
        """
        Sets the owner_office_id of this TravelRecordHeader.
        9 character Amadeus office identifier of the travel agency that owns and manages this travel record.

        :param owner_office_id: The owner_office_id of this TravelRecordHeader.
        :type: str
        """
        self._owner_office_id = owner_office_id

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

