# coding: utf-8

"""
Copyright 2016 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class HotelReservation(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        HotelReservation - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'str',
            'check_in': 'date',
            'check_out': 'date',
            'property_code': 'str',
            'property_name': 'str',
            'total_price': 'Amount',
            'traveler_ids': 'list[str]',
            'booking_info': 'HotelReservationBookingInfo'
        }

        self.attribute_map = {
            'id': 'id',
            'check_in': 'check_in',
            'check_out': 'check_out',
            'property_code': 'property_code',
            'property_name': 'property_name',
            'total_price': 'total_price',
            'traveler_ids': 'traveler_ids',
            'booking_info': 'booking_info'
        }

        self._id = None
        self._check_in = None
        self._check_out = None
        self._property_code = None
        self._property_name = None
        self._total_price = None
        self._traveler_ids = None
        self._booking_info = None

    @property
    def id(self):
        """
        Gets the id of this HotelReservation.
        Uniquely identifies this hotel room reservation in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.

        :return: The id of this HotelReservation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this HotelReservation.
        Uniquely identifies this hotel room reservation in this travel record. This ID is persistent, and remains the same for the lifetime of the travel record.

        :param id: The id of this HotelReservation.
        :type: str
        """
        self._id = id

    @property
    def check_in(self):
        """
        Gets the check_in of this HotelReservation.
        Date on which the guest will begin their stay in the hotel, in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :return: The check_in of this HotelReservation.
        :rtype: date
        """
        return self._check_in

    @check_in.setter
    def check_in(self, check_in):
        """
        Sets the check_in of this HotelReservation.
        Date on which the guest will begin their stay in the hotel, in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :param check_in: The check_in of this HotelReservation.
        :type: date
        """
        self._check_in = check_in

    @property
    def check_out(self):
        """
        Gets the check_out of this HotelReservation.
        Date on which the guest will end their stay in the hotel, in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :return: The check_out of this HotelReservation.
        :rtype: date
        """
        return self._check_out

    @check_out.setter
    def check_out(self, check_out):
        """
        Sets the check_out of this HotelReservation.
        Date on which the guest will end their stay in the hotel, in the <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> date format yyyy-MM-dd.

        :param check_out: The check_out of this HotelReservation.
        :type: date
        """
        self._check_out = check_out

    @property
    def property_code(self):
        """
        Gets the property_code of this HotelReservation.
        The 8 character property code of this given hotel. The first 2 characters of this code are the chain code that can be specified in the input. The remaining elements are proprietary to each hotel chain.

        :return: The property_code of this HotelReservation.
        :rtype: str
        """
        return self._property_code

    @property_code.setter
    def property_code(self, property_code):
        """
        Sets the property_code of this HotelReservation.
        The 8 character property code of this given hotel. The first 2 characters of this code are the chain code that can be specified in the input. The remaining elements are proprietary to each hotel chain.

        :param property_code: The property_code of this HotelReservation.
        :type: str
        """
        self._property_code = property_code

    @property
    def property_name(self):
        """
        Gets the property_name of this HotelReservation.
        The name of this hotel.

        :return: The property_name of this HotelReservation.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """
        Sets the property_name of this HotelReservation.
        The name of this hotel.

        :param property_name: The property_name of this HotelReservation.
        :type: str
        """
        self._property_name = property_name

    @property
    def total_price(self):
        """
        Gets the total_price of this HotelReservation.
        The total price of this stay, from the given check in date to the given check out date.

        :return: The total_price of this HotelReservation.
        :rtype: Amount
        """
        return self._total_price

    @total_price.setter
    def total_price(self, total_price):
        """
        Sets the total_price of this HotelReservation.
        The total price of this stay, from the given check in date to the given check out date.

        :param total_price: The total_price of this HotelReservation.
        :type: Amount
        """
        self._total_price = total_price

    @property
    def traveler_ids(self):
        """
        Gets the traveler_ids of this HotelReservation.
        Traveler identifiers to indicate the travelers to whom this hotel room reservation applies. Generally all non-infant room occupants will be marked in this array.

        :return: The traveler_ids of this HotelReservation.
        :rtype: list[str]
        """
        return self._traveler_ids

    @traveler_ids.setter
    def traveler_ids(self, traveler_ids):
        """
        Sets the traveler_ids of this HotelReservation.
        Traveler identifiers to indicate the travelers to whom this hotel room reservation applies. Generally all non-infant room occupants will be marked in this array.

        :param traveler_ids: The traveler_ids of this HotelReservation.
        :type: list[str]
        """
        self._traveler_ids = traveler_ids

    @property
    def booking_info(self):
        """
        Gets the booking_info of this HotelReservation.
        Additional details and status of this hotel room reservation.

        :return: The booking_info of this HotelReservation.
        :rtype: HotelReservationBookingInfo
        """
        return self._booking_info

    @booking_info.setter
    def booking_info(self, booking_info):
        """
        Sets the booking_info of this HotelReservation.
        Additional details and status of this hotel room reservation.

        :param booking_info: The booking_info of this HotelReservation.
        :type: HotelReservationBookingInfo
        """
        self._booking_info = booking_info

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

